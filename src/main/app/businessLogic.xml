<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:sap="http://www.mulesoft.org/schema/mule/sap" xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans"  
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/sap http://www.mulesoft.org/schema/mule/sap/current/mule-sap.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">

	<batch:job name="syncAccountsBatch">
		<batch:threading-profile poolExhaustedAction="WAIT" />
		<batch:process-records>
			<batch:step name="foreachAccountInSalesforceGetAccountInSap">
				<enricher source="#[payload.isEmpty() ? null : payload[0]['CustomerNumber']]" target="#[payload.CustomerNumber]"
					doc:name="store 'CustomerNumber' to payload">
                    <processor-chain doc:name="Processor Chain">
                        <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="BAPI_CUSTOMER_FIND" xmlVersion="2" outputXml="true" evaluateFunctionResponse="true" responseTimeout="10000" doc:name="Get Customer by Name">
                            <sap:definition><![CDATA[<BAPI_CUSTOMER_FIND type="function">
	<import>
		<MAX_CNT type="field" sapType="INT">0</MAX_CNT>
		<PL_HOLD type="field" sapType="CHAR" sapLength="1">X</PL_HOLD>
	</import>
  	<tables>
  	<SELOPT_TAB type="table">
		<table name="SELOPT_TAB">
			<row id="0">
				<TABNAME type="field"
					sapType="CHAR" sapLength="4">KNA1</TABNAME>
				<FIELDNAME type="field"
					sapType="CHAR" sapLength="5">NAME1</FIELDNAME>
				<FIELDVALUE type="field" 
					sapType="CHAR" sapLength="20">#[org.apache.commons.lang3.StringEscapeUtils.escapeXml(payload['Name'])]</FIELDVALUE>
			</row>
		</table>
		</SELOPT_TAB>
	</tables>
</BAPI_CUSTOMER_FIND>]]></sap:definition>
                        </sap:outbound-endpoint>
                        <dw:transform-message doc:name="Transform BAPI_CUSTOMER_FIND to Customer">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload."BAPI_CUSTOMER_FIND".tables."RESULT_TAB".*row map {
	(CustomerNumber : $.CUSTOMER) when ($.CUSTOMER != "")
}]]></dw:set-payload>
                        </dw:transform-message>

                    </processor-chain>
				</enricher>
			</batch:step>
            <batch:step name="forEachAccountInSapGetAccountGroup" accept-expression="payload.CustomerNumber != null">
                <enricher source="#[payload['AccountGroup']]" target="#[payload['AccountGroup']]" doc:name="store 'AccountGroup' to payload">
                    <processor-chain doc:name="Processor Chain">
                        <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="CUSTOMER_GET_KTOKD" xmlVersion="2" outputXml="true" evaluateFunctionResponse="true" responseTimeout="10000" doc:name="Get Account Group from SAP">
                            <sap:definition><![CDATA[<CUSTOMER_GET_KTOKD type="function">
	<import>
			<IV_KUNNR type="field" sapType="CHAR" sapLength="20">#[payload['CustomerNumber']]</IV_KUNNR>
	</import>
</CUSTOMER_GET_KTOKD>
]]></sap:definition>

                        </sap:outbound-endpoint>
                        <dw:transform-message doc:name="Transform CUSTOMER_GET_KTOKD to AccountGroup">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	AccountGroup : payload."CUSTOMER_GET_KTOKD".export."EV_KTOKD"
}]]></dw:set-payload>
                        </dw:transform-message>

                    </processor-chain>
                </enricher>

            </batch:step>
            <batch:step name="forEachNewAccountGetCustomerNumber" accept-expression="payload.CustomerNumber == null">
                <enricher source="#[payload['CustomerNumber']]" target="#[payload['CustomerNumber']]" doc:name="store 'CustomerNumber' to payload">
                    <processor-chain doc:name="Processor Chain">
                        <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="BAPI_CUSTOMER_GETINTNUMBER" xmlVersion="2" outputXml="true" evaluateFunctionResponse="true" responseTimeout="10000" doc:name="Get Next Customer Number from SAP">
                            <sap:definition><![CDATA[<BAPI_CUSTOMER_GETINTNUMBER type="function">
	<import>
			<ACCOUNTGROUP type="field" sapType="CHAR" sapLength="20">${sap.default.accountGroup}</ACCOUNTGROUP>
	</import>
</BAPI_CUSTOMER_GETINTNUMBER>

]]></sap:definition>

                        </sap:outbound-endpoint>
                        <dw:transform-message doc:name="Transform BAPI_CUSTOMER_GETINTNUMBER to Customer Number">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	CustomerNumber : payload."BAPI_CUSTOMER_GETINTNUMBER".export.CUSTOMERID
}]]></dw:set-payload>
                        </dw:transform-message>

                    </processor-chain>
                </enricher>

            </batch:step>
			<batch:step name="foreachAccountInSalesForceUpsertAccountInSapStep">
                <flow-ref name="commitAccountsFlow" doc:name="Execute commitAccountsFlow"/>
			</batch:step>
		</batch:process-records>
		<batch:on-complete>
			<json:object-to-json-transformer
				doc:name="Transform BatchJobInstance to JSON" />
			<logger level="INFO" doc:name="Log 'Migration process has finished'"
				message="Migration process has finished: #[payload]" />
		</batch:on-complete>
	</batch:job>
    <flow name="commitAccountsFlow" >
        <logger message="Accounts to update/create: #[payload]" level="INFO" doc:name="Log Accounts to update/create"/>
        <dw:transform-message doc:name="Transform Salesforce Account to DEBMAS01">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
---
	
	DEBMAS01: {
		IDOC @(BEGIN: "1"): {
			"EDI_DC40" @(SEGMENT: "1"): {
				TABNAM: "EDI_DC40",
				DIRECT: "2",
				IDOCTYP: "DEBMAS01",
				MESTYP: "DEBMAS",
				SNDPOR: "MULE01_LS",
				SNDPRT: "LS",
				SNDPRN: "MULE01_LS",
				RCVPOR: "T90CLNT090",
				RCVPRT: "LS",
				RCVPRN: "T90CLNT090"
			},
			E1KNA1M @(SEGMENT: "1"): {
				//setup properties for update or create (005 for update and 009 for create)
				MSGFN: "009" when (payload.AccountGroup == null) 
					   otherwise "005",
				KUNNR: payload.CustomerNumber,
				KTOKD: payload.AccountGroup when (payload.AccountGroup != null)
					   otherwise p('sap.default.accountGroup'),
				LAND1: "SK",
				NAME1: payload.Name,
				(ORT01: payload.BillingCity) when (payload.BillingCity != null),
				(PSTLZ: payload.BillingPostalCode) when (payload.BillingPostalCode != null),
				SPRAS: "E",
				(STRAS: payload.BillingStreet) when (payload.BillingStreet != null),
				(TELF1: payload.Phone) when (payload.Phone != null),
				(TELFX: payload.Fax) when (payload.Fax != null),
				"SPRAS_ISO": "EN"				
			}
		}
	}
]]></dw:set-payload>
        </dw:transform-message>

        <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="idoc" functionName="DEBMAS01" xmlVersion="2" outputXml="true"  responseTimeout="10000" doc:name="Upsert Customer in SAP"/>
        <logger message="Upsert result: #[payload]" level="INFO" doc:name="Log Result"/>
    </flow>

</mule>
